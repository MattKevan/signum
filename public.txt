FILE CONCATENATION REPORT
Root Directory: public/
Excluded Directories: node_modules, ios, public
File Extensions: *.ts, *.tsx, *.js, *.jsx, *.css, *.html, *.json, *.hbs
================================================================================

File: css/prose.css
/* public/css/prose.css */
/* A small set of styles for raw HTML from the Markdown renderer */

.prose h1, .prose h2, .prose h3 {
  font-family: 'georgia', serif; /* Or your preferred heading font */
  font-weight: bold;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
}

.prose h1 { font-size: 2.5rem; }
.prose h2 { font-size: 2rem; }
.prose h3 { font-size: 1.5rem; }

.prose p {
  margin-bottom: 1em;
}

.prose a {
  color: #0074D9; /* A nice blue for links */
  text-decoration: none;
}
.prose a:hover {
  text-decoration: underline;
}

.prose ul, .prose ol {
  margin-left: 1.5em;
  margin-bottom: 1em;
}

.prose ul { list-style-type: disc; }
.prose ol { list-style-type: decimal; }

.prose code {
  background-color: #f3f3f3;
  padding: 0.1em 0.3em;
  border-radius: 4px;
}

.prose blockquote {
  border-left: 4px solid #ddd;
  padding-left: 1em;
  margin-left: 0;
  color: #555;
  font-style: italic;
}

================================================================================

File: layouts/page/layout.json
{
  "name": "Page",
  "version": "1.0.0",
  "type": "page",
  "description": "A clean, single-column layout for standard pages.",

  "pageSchema": {
    "title": "Page content",
    "type": "object",
    "properties": {}
  }
}

================================================================================

File: layouts/page/page.hbs
{{! public/layouts/page/page.hbs }}
{{!--
  This is the default template for all standard pages, styled with Tachyons.
  - `lh-copy`: Sets a comfortable line-height for body text for readability.
  - `measure`: Constrains the width of the text block to an optimal reading length.
--}}
<article class="lh-copy measure">
    {{!--
      - `f1`: Large font size for the main heading.
      - `fw8`: Extra-bold font weight.
      - `mt0 mb3`: Margin top 0, margin bottom level 3.
    --}}
    <h1 class="f1 fw8 mt0 mb3">{{contentFile.frontmatter.title}}</h1>
    
    {{#if contentFile.frontmatter.description}}
        {{!-- `f4` for a larger lead paragraph, `mid-gray` for a lighter color --}}
        <p class="f4 mid-gray mt0 mb4">{{contentFile.frontmatter.description}}</p>
    {{/if}}

    {{!-- `bt` (border-top), `b--black-10` (light gray border), `mv4` (vertical margin) --}}
    <hr class="bt b--black-10 mv4" />

    {{!-- 
      The `markdown` helper renders the main content.
      The typography inside this block (for p, h2, ul, etc.) should be handled
      by a base set of styles. Tachyons does NOT style raw HTML tags by default,
      unlike Tailwind's `@tailwindcss/typography` plugin (`prose` class).
    --}}
    {{{markdown contentFile.content}}}
</article>

================================================================================

File: layouts/listing/layout.json
{
  "name": "Listing",
  "version": "1.0.0",
  "type": "collection",
  "description": "A flexible list for displaying collections.",
  "partials": {
    "item-teaser": "partials/item-teaser.hbs",
    "item-full": "partials/item-full.hbs"
  },
  "layoutSchema": {
    "title": "Listing settings",
    "type": "object",
    "properties": {
      "description": { "title": "Description", "type": "string", "ui:widget": "textarea" },
      "display_style": { "title": "Display", "type": "string", "enum": ["teaser", "full_post"], "enumNames": ["Teaser", "Full Post"], "default": "teaser" },
      "sort_by": { "title": "Sort by", "type": "string", "enum": ["date", "title"], "default": "date" },
      "sort_order": { "title": "Sort order", "type": "string", "enum": ["descending", "ascending"], "default": "descending" }
    }
  },
  "pageSchema": {
    "title": "Item Content",
    "type": "object",
    "properties": {
      "summary": { "title": "Summary", "type": "string", "ui:widget": "textarea" }
    }
  },
  "uiSchema": {
    "ui:groups": [
      { "title": "Display Options", "fields": ["display_style", "sort_by", "sort_order"] }
    ]
  }
}

================================================================================

File: layouts/listing/page.hbs
{{! 
  This template renders the dedicated page for a single item within the collection.
  - `measure-wide`: Constrains the text width for optimal readability.
  - `lh-copy`: Sets a comfortable line height for body text.
  - `f1 fw8`: Makes the title large and extra-bold.
  - `f6 gray ttu`: Styles the date (small, gray, and text-transform: uppercase).
  - The `markdown` helper will render the body content. Its typography (p, h2, etc.)
    should be handled by a base stylesheet, like the one in the default theme.
}}
<article class="measure-wide center lh-copy">
    <header>
        <h1 class="f1 fw8 mv0">{{contentFile.frontmatter.title}}</h1>
        <p class="f6 gray ttu tracked mt2 mb4">{{formatDate contentFile.frontmatter.date}}</p>
    </header>
    
    {{{markdown contentFile.content}}}
</article>

================================================================================

File: layouts/listing/listing.hbs
{{! 
  This template renders the main page for a collection.
  - `pb4 mb4`: Provides bottom padding and margin to the header for spacing.
  - `f1 fw7`: Styles the main title (large, bold).
  - `f4 mid-gray`: Styles the description (slightly smaller, gray).
  - The `each` loop iterates over the sorted items passed from the theme engine.
  - An `if/else` block checks the `display_style` property (set by the user in the editor)
    to decide whether to render the `item-full` or `item-teaser` partial for each item.
}}
<section>
  <header class="pb4 mb4 bb b--black-10">
    <h1 class="f1 fw7 mt0 mb2">{{collectionNode.title}}</h1>
    {{#if collectionNode.description}}
      <p class="f4 mid-gray mt0">{{collectionNode.description}}</p>
    {{/if}}
  </header>
  
  <div class="listing-items">
    {{#each items}}
      {{#if (eq ../collectionNode.display_style "full_post")}}
        {{> item-full this}}
      {{else}}
        {{> item-teaser this}}
      {{/if}}
    {{else}}
      <p class="i gray">No items have been added to this listing yet.</p>
    {{/each}}
  </div>
</section>

================================================================================

File: layouts/listing/partials/item-teaser.hbs
{{! 
  This partial renders a "teaser" card for a collection item.
  - The `<a>` tag wraps the entire block, making it a single clickable target.
  - `link dim`: Removes default link styling and adds a hover effect.
  - `db pa4 mb4`: Display block, large padding, and bottom margin for spacing.
  - `ba b--black-10 br2`: Border all sides, light gray border color, and rounded corners.
  - `shadow-hover`: A Tachyons convention for a hover effect (you'd define this simple class in a custom theme CSS file if desired).
}}
<a href="{{this.url}}" class="link dim db pa4 mb4 ba b--black-10 br2 shadow-hover bg-white black">
    <h3 class="f3 fw6 mv0">{{this.frontmatter.title}}</h3>
    <p class="f6 gray mt1 mb3">{{formatDate this.frontmatter.date}}</p>
    
    {{#if this.frontmatter.summary}}
        <p class="lh-copy mid-gray mv0">{{this.frontmatter.summary}}</p>
    {{/if}}
</a>

================================================================================

File: layouts/listing/partials/item-full.hbs
{{! 
  This partial renders the full content of an item within the listing page.
  - `bb b--black-10`: Adds a bottom border to separate posts.
  - `pb4 mb4`: Padding and margin for vertical spacing.
  - The title is a link to its dedicated page.
  - `lh-copy`: Improves readability of the rendered markdown content.
}}
<article class="pb4 mb4 bb b--black-10">
    <header>
        <h2 class="f2 fw7 mt0 mb2"><a href="{{this.url}}" class="link dim black">{{this.frontmatter.title}}</a></h2>
        <p class="f6 gray mt1 mb3">{{formatDate this.frontmatter.date}}</p>
    </header>
    
    <div class="lh-copy">
        {{{markdown this.content}}}
    </div>
</article>

================================================================================

File: themes/default/theme.json
{
  "name": "Default Theme",
  "version": "1.0.0",
  "files": [
    { "path": "theme.json", "type": "manifest" },
    { "path": "base.hbs", "type": "base", "name": "Base HTML Shell" },
    { "path": "css/theme.css", "type": "stylesheet", "name": "Main Stylesheet" },
    { "path": "partials/head.hbs", "type": "partial", "name": "head" },
    { "path": "partials/header.hbs", "type": "partial", "name": "header" },
    { "path": "partials/footer.hbs", "type": "partial", "name": "footer" }
  ],
  "appearanceSchema": {
    "title": "Theme Customization",
    "description": "Customize the core fonts and colors of your site. These values override the theme's defaults.",
    "type": "object",
    "properties": {
      "font_body": {
        "type": "string",
        "title": "Body Font Family",
        "description": "e.g., 'Helvetica, sans-serif' or 'Georgia, serif'",
        "default": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif"
      },
      "font_heading": {
        "type": "string",
        "title": "Heading Font Family",
        "description": "e.g., 'Georgia, serif'",
        "default": "Georgia, 'Times New Roman', Times, serif"
      },
      "color_primary": {
        "type": "string",
        "title": "Primary Accent Color",
        "description": "Used for links and important elements.",
        "format": "color",
        "default": "#0074D9"
      },
      "color_text": {
        "type": "string",
        "title": "Body Text Color",
        "format": "color",
        "default": "#333333"
      },
      "color_background": {
        "type": "string",
        "title": "Page Background Color",
        "format": "color",
        "default": "#f4f4f4"
      }
    }
  }
}

================================================================================

File: themes/default/base.hbs
{{! themes/default/base.hbs }}
<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    {{> head}}
</head>

<body class="sans-serif">
    
    <div x-data="{ isMobileMenuOpen: false }" class="flex flex-column min-vh-100">
        {{> header}}
        <main class="flex-auto mw7 center pa3 pa4-ns">
            {{{body}}}
        </main>
        {{> footer}}
    </div>

    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
</body>
</html>

================================================================================

File: themes/default/css/theme.css
/* public/themes/default/css/theme.css */

/* ==========================================================================
   1. THEME VARIABLE DEFINITIONS (:root)
   - These are the default values for the theme.
   - The user's choices from the "Appearance" settings will override these.
   - The variable names (--kebab-case) directly correspond to the keys
     (snake_case) in theme.json.
   ========================================================================== */
:root {
  --font-body: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  --font-heading: Georgia, 'Times New Roman', Times, serif;
  
  --color-primary: #0074D9; /* Default: A nice blue */
  --color-text: #333333;
  --color-background: #f4f4f4;
}


/* ==========================================================================
   2. APPLYING VARIABLES TO BASE STYLES
   - These rules consume the variables, making the theme dynamic.
   ========================================================================== */
body {
  font-family: var(--font-body);
  background-color: var(--color-background);
  color: var(--color-text);
  transition: background-color .2s ease-in-out, color .2s ease-in-out;
}


/* ==========================================================================
   3. PROSE CONTENT TYPOGRAPHY (using variables)
   - Styles for raw HTML generated from Markdown.
   ========================================================================== */

.prose h1, .prose h2, .prose h3, .prose h4 {
  font-family: var(--font-heading);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
}

.prose h1 { font-size: 2.25rem; }
.prose h2 { font-size: 1.5rem; }
.prose h3 { font-size: 1.25rem; }

.prose p {
  margin-bottom: 1em;
  line-height: 1.6;
}

.prose a {
  color: var(--color-primary);
  text-decoration: none;
  transition: opacity .15s ease-in;
}

.prose a:hover {
  opacity: 0.7;
}

/* ... other prose styles like lists, blockquotes, etc. ... */

================================================================================

File: themes/default/partials/footer.hbs
<footer class="border-t border-gray-200 dark:border-gray-800">
    <div class="container mx-auto px-4 py-8 text-center text-sm text-gray-500 dark:text-gray-400">
        <p>© {{year}} {{manifest.title}}. All Rights Reserved.</p>
        <p class="mt-1">
            Published with 
            <a href="https://signum-project-url.com" target="_blank" rel="noopener" class="font-medium hover:text-blue-600 dark:hover:text-blue-400 underline decoration-dotted underline-offset-4">
                Signum
            </a>.
        </p>
    </div>
</footer>

================================================================================

File: themes/default/partials/head.hbs
{{! src/partials/head.hbs }}
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{pageTitle}} | {{manifest.title}}</title>
    
    {{!-- SEO Tags --}}
    {{!-- The canonical URL is now fully constructed by the theme engine for safety --}}
    <link rel="canonical" href="{{canonicalUrl}}">
    
    {{!-- Other meta/OpenGraph/Twitter tags would also use the full canonicalUrl --}}
    <meta property="og:url" content="{{canonicalUrl}}">

    
    {{#if contentFile.frontmatter.description}}
        <meta name="description" content="{{contentFile.frontmatter.description}}">
    {{else if collectionNode.description}}
        <meta name="description" content="{{collectionNode.description}}">
    {{else}}
        <meta name="description" content="{{manifest.description}}">
    {{/if}}

    {{!-- Open Graph Tags (for Facebook, LinkedIn, etc.) --}}
    <meta property="og:title" content="{{pageTitle}}">
    {{#if contentFile.frontmatter.description}}
        <meta property="og:description" content="{{contentFile.frontmatter.description}}">
    {{else}}
        <meta property="og:description" content="{{manifest.description}}">
    {{/if}}
    <meta property="og:url" content="{{manifest.baseUrl}}{{../pageUrl}}">
    <meta property="og:site_name" content="{{manifest.title}}">
    {{#if contentFile.frontmatter.image}}
        <meta property="og:image" content="{{manifest.baseUrl}}{{contentFile.frontmatter.image}}">
    {{/if}}
    <meta property="og:type" content="{{#if contentFile}}article{{else}}website{{/if}}">

    {{!-- Twitter Card Tags --}}
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="{{pageTitle}}">
    {{#if contentFile.frontmatter.description}}
        <meta name="twitter:description" content="{{contentFile.frontmatter.description}}">
    {{else}}
        <meta name="twitter:description" content="{{manifest.description}}">
    {{/if}}
    {{#if contentFile.frontmatter.image}}
        <meta name="twitter:image" content="{{manifest.baseUrl}}{{contentFile.frontmatter.image}}">
    {{/if}}

    {{!-- Favicon Placeholder - Users should replace these --}}
    <link rel="icon" href="/favicon.ico" sizes="any">
    <link rel="icon" href="/favicon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">

     {{!-- STYLESHEETS --}}
    <link rel="stylesheet" href="https://unpkg.com/tachyons@4.12.0/css/tachyons.min.css"/>
    <link rel="stylesheet" href="{{baseUrl}}/themes/{{manifest.theme.name}}/css/theme.css">

    {{!-- This is where the user's custom choices are injected as CSS variables --}}
    {{{styleOverrides}}}


================================================================================

File: themes/default/partials/header.hbs
{{! 
  This header component provides the site title and navigation.
  It uses Tachyons for styling and Alpine.js for the mobile menu toggle.
  - `x-data="{ isMobileMenuOpen: false }"`: Initializes the Alpine component state.
  - `@click="isMobileMenuOpen = !isMobileMenuOpen"`: Toggles the state on button click.
  - `x-show="isMobileMenuOpen"`: Conditionally shows/hides the mobile menu panel.
  - ARIA attributes (`aria-controls`, `aria-expanded`) are used for accessibility.
  - Tachyons responsive classes (`dn`, `db-ns`) handle desktop vs. mobile visibility.
}}
<header class="w-100 bb b--black-10 bg-white-80" style="backdrop-filter: blur(8px);">
    <div class="mw8 center ph3 ph4-ns">
        <div class="flex h3 items-center justify-between">
            
            {{!-- Site Logo/Title --}}
            <div class="flex-shrink-0">
                {{!-- The `link` class removes default underline, `dim` adds a hover effect. --}}
                <a href="/" class="link dim f4 fw7 near-black">
                    {{manifest.title}}
                </a>
            </div>

            {{!-- Desktop Navigation --}}
            {{!-- `dn` (display: none) on mobile, `db-ns` (display: block) on screens "not small" --}}
            <nav class="dn db-ns">
                {{#each navLinks}}
                    <a href="{{this.href}}" class="link dim gray f6 fw5 mh3">
                        {{this.label}}
                    </a>
                {{/each}}
            </nav>

            {{!-- Mobile Menu Button --}}
            {{!-- `db` (display: block) on mobile, `dn-ns` (display: none) on screens "not small" --}}
            <div class="db dn-ns">
                <button 
                    @click="isMobileMenuOpen = !isMobileMenuOpen" 
                    type="button" 
                    class="button-reset bg-transparent bn pa2"
                    aria-controls="mobile-menu" 
                    :aria-expanded="isMobileMenuOpen.toString()"
                >
                    <span class="sr-only">Open main menu</span>
                    
                    {{!-- Hamburger Icon (visible when menu is closed) --}}
                    <svg x-show="!isMobileMenuOpen" class="h2 w2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                    </svg>
                    
                    {{!-- Close (X) Icon (visible when menu is open) --}}
                    {{!-- `x-cloak` prevents the icon from flashing on page load before Alpine initializes. --}}
                    <svg x-show="isMobileMenuOpen" x-cloak class="h2 w2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

        </div>
    </div>

    {{!-- Mobile Menu Panel --}}
    {{!-- This panel is shown or hidden by Alpine based on the `isMobileMenuOpen` state. --}}
    {{!-- `x-transition` adds a smooth fade/scale effect. --}}
    <div 
        x-show="isMobileMenuOpen" 
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 scale-95"
        x-transition:enter-end="opacity-100 scale-100"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 scale-100"
        x-transition:leave-end="opacity-0 scale-95"
        class="db dn-ns bb b--black-10" 
        id="mobile-menu"
        x-cloak
    >
        <div class="pa3">
            {{#each navLinks}}
                <a 
                    href="{{this.href}}" 
                    class="db link dim near-black f6 pa2 br2 hover-bg-light-gray"
                    {{!-- Clicking a link closes the mobile menu --}}
                    @click="isMobileMenuOpen = false"
                >
                    {{this.label}}
                </a>
            {{/each}}
        </div>
    </div>
</header>

================================================================================

