FILE CONCATENATION REPORT
Root Directory: public/
Excluded Directories: node_modules, public, ios
File Extensions: *.ts, *.tsx, *.js, *.jsx, *.css, *.html, *.json, *.hbs
================================================================================

File: layouts/page/layout.json
{
  "name": "Standard Page",
  "version": "1.0.0",
  "description": "A clean, single-column layout for standard pages like 'About Us'.",
  "layoutType": "page",
  "files": [
    { "path": "layout.json", "type": "manifest" },
    { "path": "page.hbs", "type": "template" }
  ],
  "schema": {
    "title": "Page Options",
    "type": "object",
    "properties": {
      "show_updated_date": {
        "type": "boolean",
        "title": "Show Last Updated Date",
        "default": false
      }
    }
  }
}

================================================================================

File: layouts/page/page.hbs
{{! /public/layouts/page/page.hbs }}
<article class="lh-copy measure">
    {{!-- Render the page's own content --}}
    <h1 class="f1 fw8 mt0 mb3">{{contentFile.frontmatter.title}}</h1>
    {{{markdown contentFile.content}}}
    
    {{!-- 
      If the page resolver found view items, it means this page is a View Page.
      Call the `render_view` helper to render the list section.
    --}}
    {{#if viewItems}}
        <hr class="bt b--black-10 mv4" />
        {{{render_view contentFile.frontmatter.view viewItems}}}
    {{/if}}
</article>

================================================================================

File: layouts/teaser/layout.json
{
  "name": "Teaser Card",
  "version": "1.0.0",
  "description": "A simple card layout for list items, showing a title and summary.",
  "layoutType": "item",
  "files": [
    { "path": "layout.json", "type": "manifest" },
    { "path": "template.hbs", "type": "template" }
  ],
  "schema": {
    "title": "Teaser Card Options",
    "type": "object",
    "properties": {
      "summary": {
        "title": "Summary",
        "description": "A short summary for the teaser card, shown in lists.",
        "type": "string",
        "ui:widget": "textarea"
      }
    }
  }
}

================================================================================

File: layouts/teaser/template.hbs
{{! /public/layouts/teaser/template.hbs }}
{{!-- The context 'this' is a single content item. --}}
<div class="mb3 pb3 bb b--black-10">
    <a href="{{this.url}}" class="link black dim">
        <h3 class="f4 fw6 mv0">{{this.frontmatter.title}}</h3>
    </a>
    <p class="f6 gray mt1 mb2">{{formatDate this.frontmatter.date}}</p>
    
    {{#if this.frontmatter.summary}}
        <p class="lh-copy mid-gray mv0 f6">{{this.frontmatter.summary}}</p>
    {{/if}}
</div>

================================================================================

File: layouts/listing/layout.json
{
  "name": "Listing",
  "version": "1.0.0",
  "description": "A layout for pages that display lists of content, such as a blog index or project gallery.",
  "layoutType": "view",
  "files": [
    { "path": "layout.json", "type": "manifest" },
    { "path": "listing.hbs", "type": "template" }
  ],
  "schema": {
    "title": "Listing Page Options",
    "type": "object",
    "properties": {
      "show_page_title": {
        "type": "boolean",
        "title": "Show Page Title",
        "description": "Display the page's main title above the content list.",
        "default": true
      }
    }
  }
}

================================================================================

File: layouts/listing/listing.hbs
{{! /public/layouts/listing/listing.hbs }}
{{!-- 
  This layout is specifically for "View Pages". 
  It receives the full page resolution context, including:
  - contentFile: The .md file for this page itself (for title, intro content).
  - viewItems: The array of items for the *current* page.
  - pagination: The object with all pagination data (totalPages, currentPage, etc.).
--}}
<article class="w-100">
    {{!-- 1. Render the page's own title from its .md file, if the user wants it. --}}
    {{#if contentFile.frontmatter.show_page_title}}
      <h1 class="f1 fw8 mt0 mb3">{{contentFile.frontmatter.title}}</h1>
    {{/if}}

    {{!-- 2. Render any introductory content from the page's .md file. --}}
    {{#if contentFile.content}}
      <div class="lh-copy measure mb4">
        {{{markdown contentFile.content}}}
      </div>
    {{/if}}
    
    {{!-- 
      3. Render the list of items. 
      The render_view helper is still used to select the correct view template (e.g., 'list' or 'grid').
    --}}
    {{#if viewItems}}
        {{{render_view contentFile.frontmatter.view viewItems}}}
    {{/if}}

    {{!-- 
      4. Render the pager. 
      The pager helper gets the pagination object directly from this layout's context.
      It will automatically render nothing if pagination is not needed.
    --}}
    {{{pager pagination}}}
</article>

================================================================================

File: views/list/view.json
{
  "name": "Simple List View",
  "version": "1.0.0",
  "description": "Displays content from a collection in a standard, sorted list.",
  "icon": "list-ordered",
  "files": [
    { "path": "view.json", "type": "manifest" },
    { "path": "template.hbs", "type": "template" }
  ],
  "schema": {
    "title": "List-Specific Options",
    "type": "object",
    "properties": {
      "sort_by": {
        "type": "string",
        "title": "Sort items by",
        "enum": ["date", "title"],
        "enumNames": ["Publication Date", "Title"],
        "default": "date"
      },
      "sort_order": {
        "type": "string",
        "title": "Sort order",
        "enum": ["desc", "asc"],
        "enumNames": ["Descending", "Ascending"],
        "default": "desc"
      },
      "show_pager": {
        "type": "boolean",
        "title": "Show Pagination Controls",
        "description": "If enabled, the list will be split into multiple pages.",
        "default": false
      },
      "items_per_page": {
        "type": "number",
        "title": "Items Per Page",
        "description": "The number of items to show per page if pagination is enabled.",
        "default": 10
      }
    }
  }
}

================================================================================

File: views/list/template.hbs
{{! /public/views/list/template.hbs }}
{{!-- 
  This template is now simpler. It only receives `items` and `itemLayoutId`.
  It is no longer responsible for rendering the pager.
--}}

<div class="view-list">
  {{#if items}}
    <div class="item-container">
      {{#each items}}
        {{{render_layout_for_item this layout=../itemLayoutId}}}
      {{/each}}
    </div>
  {{else}}
    <p class="i gray">There are no items to display in this view.</p>
  {{/if}}
</div>

================================================================================

File: themes/default/theme.json
{
  "name": "Default Theme",
  "version": "1.0.0",
  "files": [
    { "path": "theme.json", "type": "manifest" },
    { "path": "base.hbs", "type": "base", "name": "Base HTML Shell" },
    { "path": "css/theme.css", "type": "stylesheet", "name": "Main Stylesheet" },
    { "path": "partials/head.hbs", "type": "partial", "name": "head" },
    { "path": "partials/header.hbs", "type": "partial", "name": "header" },
    { "path": "partials/footer.hbs", "type": "partial", "name": "footer" }
  ],
  "appearanceSchema": {
    "title": "Theme Customization",
    "description": "Customize the core fonts and colors of your site. These values override the theme's defaults.",
    "type": "object",
    "properties": {
      "font_body": {
        "type": "string",
        "title": "Body Font Family",
        "description": "e.g., 'Helvetica, sans-serif' or 'Georgia, serif'",
        "default": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif"
      },
      "font_heading": {
        "type": "string",
        "title": "Heading Font Family",
        "description": "e.g., 'Georgia, serif'",
        "default": "Georgia, 'Times New Roman', Times, serif"
      },
      "color_primary": {
        "type": "string",
        "title": "Primary Accent Color",
        "description": "Used for links and important elements.",
        "format": "color",
        "default": "#0074D9"
      },
      "color_text": {
        "type": "string",
        "title": "Body Text Color",
        "format": "color",
        "default": "#333333"
      },
      "color_background": {
        "type": "string",
        "title": "Page Background Color",
        "format": "color",
        "default": "#f4f4f4"
      }
    }
  }
}

================================================================================

File: themes/default/base.hbs
{{! themes/default/base.hbs }}
<!DOCTYPE html>
<html lang="en">
<head>
    {{> head headContext}}
</head>
<body class="sans-serif">
    <div x-data="{ isMobileMenuOpen: false }" class="flex flex-column min-vh-100">
        {{> header}}
        <main class="flex-auto mw7 center pa3 pa4-ns">
            {{{body}}}
        </main>
        {{> footer}}
    </div>
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
</body>
</html>

================================================================================

File: themes/default/css/theme.css
/* public/themes/default/css/theme.css */

/* ==========================================================================
   1. THEME VARIABLE DEFINITIONS (:root)
   - These are the default values for the theme.
   - The user's choices from the "Appearance" settings will override these.
   - The variable names (--kebab-case) directly correspond to the keys
     (snake_case) in theme.json.
   ========================================================================== */
:root {
  --font-body: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  --font-heading: Georgia, 'Times New Roman', Times, serif;
  
  --color-primary: #0074D9; /* Default: A nice blue */
  --color-text: #333333;
  --color-background: #f4f4f4;
}


/* ==========================================================================
   2. APPLYING VARIABLES TO BASE STYLES
   - These rules consume the variables, making the theme dynamic.
   ========================================================================== */
body {
  font-family: var(--font-body);
  background-color: var(--color-background);
  color: var(--color-text);
  transition: background-color .2s ease-in-out, color .2s ease-in-out;
}


/* ==========================================================================
   3. PROSE CONTENT TYPOGRAPHY (using variables)
   - Styles for raw HTML generated from Markdown.
   ========================================================================== */

.prose h1, .prose h2, .prose h3, .prose h4 {
  font-family: var(--font-heading);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
}

.prose h1 { font-size: 2.25rem; }
.prose h2 { font-size: 1.5rem; }
.prose h3 { font-size: 1.25rem; }

.prose p {
  margin-bottom: 1em;
  line-height: 1.6;
}

.prose a {
  color: var(--color-primary);
  text-decoration: none;
  transition: opacity .15s ease-in;
}

.prose a:hover {
  opacity: 0.7;
}

/* ... other prose styles like lists, blockquotes, etc. ... */

================================================================================

File: themes/default/partials/footer.hbs
<footer class="border-t border-gray-200 dark:border-gray-800">
    <div class="container mx-auto px-4 py-8 text-center text-sm text-gray-500 dark:text-gray-400">
        <p>© {{year}} {{manifest.title}}. All Rights Reserved.</p>
        <p class="mt-1">
            Published with 
            <a href="https://signum-project-url.com" target="_blank" rel="noopener" class="font-medium hover:text-blue-600 dark:hover:text-blue-400 underline decoration-dotted underline-offset-4">
                Signum
            </a>.
        </p>
    </div>
</footer>

================================================================================

File: themes/default/partials/head.hbs
{{! src/partials/head.hbs }}
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{pageTitle}} | {{manifest.title}}</title>
    
    {{!-- SEO Tags --}}
    {{!-- The canonical URL is now fully constructed by the theme engine for safety --}}
    <link rel="canonical" href="{{canonicalUrl}}">
    
    {{!-- Other meta/OpenGraph/Twitter tags would also use the full canonicalUrl --}}
    <meta property="og:url" content="{{canonicalUrl}}">

    
    {{#if contentFile.frontmatter.description}}
        <meta name="description" content="{{contentFile.frontmatter.description}}">
    {{else if collectionNode.description}}
        <meta name="description" content="{{collectionNode.description}}">
    {{else}}
        <meta name="description" content="{{manifest.description}}">
    {{/if}}

    {{!-- Open Graph Tags (for Facebook, LinkedIn, etc.) --}}
    <meta property="og:title" content="{{pageTitle}}">
    {{#if contentFile.frontmatter.description}}
        <meta property="og:description" content="{{contentFile.frontmatter.description}}">
    {{else}}
        <meta property="og:description" content="{{manifest.description}}">
    {{/if}}
    <meta property="og:url" content="{{manifest.baseUrl}}{{../pageUrl}}">
    <meta property="og:site_name" content="{{manifest.title}}">
    {{#if contentFile.frontmatter.image}}
        <meta property="og:image" content="{{manifest.baseUrl}}{{contentFile.frontmatter.image}}">
    {{/if}}
    <meta property="og:type" content="{{#if contentFile}}article{{else}}website{{/if}}">

    {{!-- Twitter Card Tags --}}
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="{{pageTitle}}">
    {{#if contentFile.frontmatter.description}}
        <meta name="twitter:description" content="{{contentFile.frontmatter.description}}">
    {{else}}
        <meta name="twitter:description" content="{{manifest.description}}">
    {{/if}}
    {{#if contentFile.frontmatter.image}}
        <meta name="twitter:image" content="{{manifest.baseUrl}}{{contentFile.frontmatter.image}}">
    {{/if}}

    {{!-- Favicon Placeholder - Users should replace these --}}
    <link rel="icon" href="/favicon.ico" sizes="any">
    <link rel="icon" href="/favicon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">

     {{!-- STYLESHEETS --}}
    <link rel="stylesheet" href="https://unpkg.com/tachyons@4.12.0/css/tachyons.min.css"/>
    <link rel="stylesheet" href="{{baseUrl}}/themes/{{manifest.theme.name}}/css/theme.css">

    {{!-- This is where the user's custom choices are injected as CSS variables --}}
    {{{styleOverrides}}}


================================================================================

File: themes/default/partials/header.hbs
{{! 
  This header component provides the site title and navigation.
  It uses Tachyons for styling and Alpine.js for the mobile menu toggle.
  - `x-data="{ isMobileMenuOpen: false }"`: Initializes the Alpine component state.
  - `@click="isMobileMenuOpen = !isMobileMenuOpen"`: Toggles the state on button click.
  - `x-show="isMobileMenuOpen"`: Conditionally shows/hides the mobile menu panel.
  - ARIA attributes (`aria-controls`, `aria-expanded`) are used for accessibility.
  - Tachyons responsive classes (`dn`, `db-ns`) handle desktop vs. mobile visibility.
}}
<header class="w-100 bb b--black-10 bg-white-80" style="backdrop-filter: blur(8px);">
    <div class="mw8 center ph3 ph4-ns">
        <div class="flex h3 items-center justify-between">
            
            {{!-- Site Logo/Title --}}
            <div class="flex-shrink-0">
                {{!-- The `link` class removes default underline, `dim` adds a hover effect. --}}
                <a href="/" class="link dim f4 fw7 near-black">
                    {{manifest.title}}
                </a>
            </div>

            {{!-- Desktop Navigation --}}
            {{!-- `dn` (display: none) on mobile, `db-ns` (display: block) on screens "not small" --}}
            <nav class="dn db-ns">
                {{#each navLinks}}
                    <a href="{{this.href}}" class="link dim gray f6 fw5 mh3">
                        {{this.label}}
                    </a>
                {{/each}}
            </nav>

            {{!-- Mobile Menu Button --}}
            {{!-- `db` (display: block) on mobile, `dn-ns` (display: none) on screens "not small" --}}
            <div class="db dn-ns">
                <button 
                    @click="isMobileMenuOpen = !isMobileMenuOpen" 
                    type="button" 
                    class="button-reset bg-transparent bn pa2"
                    aria-controls="mobile-menu" 
                    :aria-expanded="isMobileMenuOpen.toString()"
                >
                    <span class="sr-only">Open main menu</span>
                    
                    {{!-- Hamburger Icon (visible when menu is closed) --}}
                    <svg x-show="!isMobileMenuOpen" class="h2 w2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                    </svg>
                    
                    {{!-- Close (X) Icon (visible when menu is open) --}}
                    {{!-- `x-cloak` prevents the icon from flashing on page load before Alpine initializes. --}}
                    <svg x-show="isMobileMenuOpen" x-cloak class="h2 w2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

        </div>
    </div>

    {{!-- Mobile Menu Panel --}}
    {{!-- This panel is shown or hidden by Alpine based on the `isMobileMenuOpen` state. --}}
    {{!-- `x-transition` adds a smooth fade/scale effect. --}}
    <div 
        x-show="isMobileMenuOpen" 
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 scale-95"
        x-transition:enter-end="opacity-100 scale-100"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 scale-100"
        x-transition:leave-end="opacity-0 scale-95"
        class="db dn-ns bb b--black-10" 
        id="mobile-menu"
        x-cloak
    >
        <div class="pa3">
            {{#each navLinks}}
                <a 
                    href="{{this.href}}" 
                    class="db link dim near-black f6 pa2 br2 hover-bg-light-gray"
                    {{!-- Clicking a link closes the mobile menu --}}
                    @click="isMobileMenuOpen = false"
                >
                    {{this.label}}
                </a>
            {{/each}}
        </div>
    </div>
</header>

================================================================================

